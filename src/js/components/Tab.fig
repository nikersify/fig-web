label editor-tab

template
	.tab(class=classList
		@click=selectTab
		@dblclick=editTab)

		input(id=`tab-input-${tab.id}`
			value=tab.name
			spellcheck='false'
			@blur=blurred
			@keydown=keydown)

		if closable
			button(@click=removeTab) x

		unless tab.editing
			| #{tab.name}

script
	export default function (view, opts, emit) {
		const id = opts.tab.id

		view.tab = opts.tab
		view.closable = opts.closable

		view.classList = {
			selected: opts.tab.selected,
			editing: opts.tab.editing
		}

		view.selectTab = e => {
			if (e.target.nodeName !== 'DIV') {
				return
			}

			emit('tab select', id)
		}

		view.removeTab = e => {
			emit('tab remove', id)
		}

		view.editTab = e => {
			if (e.target.nodeName !== 'DIV') {
				return
			}

			emit('tab edit', id)
		}

		view.keydown = e => {
			if (e.key !== 'Enter') {
				return
			}

			e.preventDefault()
			e.target.blur()
		}

		view.blurred = e => {
			const value = e.target.value
			emit('tab edit confirm', {
				id, value
			})
		}
	}
